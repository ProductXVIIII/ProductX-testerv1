if game.PlaceId == 3623096087 then
    local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
    local Window = OrionLib:MakeWindow({Name = "Product X Tester", IntroText = "Product X by DeLTaXVIIII", SaveConfig = false, ConfigFolder = "DeLTaXVIIII Coinfig"})

    
    getgenv().teleport = true
    getgenv().selectisland = "Tiny Island"
    getgenv().autohatch = true
    getgenv().selectcrystal = "Blue Crystal"
    getgenv().fastPunch = false
    getgenv().autoPunch = false
    getgenv().fastWeight = false

    
    function teleport()
        local args = {
            [1] = "travelToArea",
            [2] = workspace:WaitForChild("areaCircles"):WaitForChild("areaCircle")
        }
        game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("areaTravelRemote"):InvokeServer(unpack(args))
    end

    
    function autohatch()
        local args = {
            [1] = "openCrystal",
            [2] = getgenv().selectcrystal
        }
        game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("openCrystalRemote"):InvokeServer(unpack(args))
    end

    
    function fastPunch()
        print("Fast Punch activé")
        spawn(function()
            while getgenv().fastPunch do
                local punchValue = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Punch"):FindFirstChildOfClass("NumberValue")
                if punchValue then
                    punchValue.Value = 0



                    print("Fast Punch en cours...")
                else
                    print("Erreur : Punch introuvable dans le Backpack.")
                end
                task.wait(0.5)


            end
        end)
    end

    
    function autoPunch()
        print("Auto Punch activé")
        spawn(function()
            while getgenv().autoPunch do
                print("Auto Punch en cours...")
                local swingFistRemote = game:GetService("ReplicatedStorage"):FindFirstChild("rEvents"):FindFirstChild("swingFistRemote")
                if swingFistRemote then
                    local args = {
                        [1] = "swingFist"
                    }
                    local success, errorMessage = pcall(function()
                        swingFistRemote:InvokeServer(unpack(args))
                    end)

                    if not success then
                        print("Erreur lors de l'appel de swingFistRemote: " .. errorMessage)
                    end
                else
                    print("Erreur : swingFistRemote introuvable.")
                end
                task.wait(0.5)
            end
        end)
    end

    
    function fastWeight()
        print("Fast Weight activé")
        spawn(function()
            while getgenv().fastWeight do
                local weightValue = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Weight"):FindFirstChildOfClass("NumberValue")
                if weightValue then
                    weightValue.Value = 0



                    print("Fast Weight en cours...")
                else
                    print("Erreur : Weight introuvable dans le Backpack.")
                end
                task.wait(0.5) -- Fréquence de levage
            end
        end)
    end

    
    function nightSky()
        local Lighting = game:GetService("Lighting")
        
        Lighting.ClockTime = 0
        Lighting.Brightness = 2
        Lighting.OutdoorAmbient = Color3.new(0.3, 0.3, 0.3)
        Lighting.Ambient = Color3.new(0.3, 0.3, 0.3)

        local sky = Instance.new("Sky")
        sky.Parent = Lighting
        sky.SkyboxBk = "rbxassetid://6825465291"
        sky.SkyboxDn = "rbxassetid://6825465291"
        sky.SkyboxFt = "rbxassetid://6825465291"
        sky.SkyboxLf = "rbxassetid://6825465291"
        sky.SkyboxRt = "rbxassetid://6825465291"
        sky.SkyboxUp = "rbxassetid://6825465291"
    end




    function clickTeleport()
        local mouse = game.Players.LocalPlayer:GetMouse()
        local tool = Instance.new("Tool")
        tool.RequiresHandle = false
        tool.Name = "Click Teleport"
        tool.Activated:Connect(function()
            local pos = mouse.Hit + Vector3.new(0, 2.5, 0)
            pos = CFrame.new(pos.X, pos.Y, pos.Z)
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
        end)
        tool.Parent = game.Players.LocalPlayer.Backpack
    end

    
    local TeleportTab = Window:MakeTab({
        Name = "Teleport",
        Icon = "rbxassetid://4483345998"
    })

    local EggsTab = Window:MakeTab({
        Name = "Eggs",
        Icon = "rbxassetid://4483345998"
    })

    local MiscTab = Window:MakeTab({
        Name = "Misc",
        Icon = "rbxassetid://4483345998"
    })

    local AutoFarmTab = Window:MakeTab({
        Name = "Auto Farm",
        Icon = "rbxassetid://4483345998"
    })

    
    TeleportTab:AddButton({
        Name = "Teleport",
        Callback = function()
            teleport()
        end
    })

    TeleportTab:AddButton({
        Name = "Click Teleport",
        Callback = function()
            clickTeleport()
        end
    })

    EggsTab:AddButton({
        Name = "Auto Hatch",
        Callback = function()
            autohatch()
        end
    })

    MiscTab:AddButton({
        Name = "Night Sky",
        Callback = function()
            nightSky()
        end
    })

    
    MiscTab:AddSlider({
        Name = "Speed",
        Min = 16,
        Max = 1000,
        Default = 16,
        Color = Color3.fromRGB(255, 255, 255),
        Increment = 1,
        ValueName = "speed",
        Callback = function(Value)
            game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = Value -- Met à jour la vitesse de marche
            print("Vitesse de marche définie sur : " .. Value)
        end    
    })

    
    AutoFarmTab:AddToggle({
        Name = "Fast Punch",
        Default = false,
        Callback = function(value)
            getgenv().fastPunch = value
            if value then
                fastPunch()
            end
        end
    })

    
    AutoFarmTab:AddToggle({
        Name = "Auto Punch",
        Default = false,
        Callback = function(value)
            getgenv().autoPunch = value
            if value then
                autoPunch()
            end
        end
    })

    
    AutoFarmTab:AddToggle({
        Name = "Fast Weight",
        Default = false,
        Callback = function(value)
            getgenv().fastWeight = value
            if value then
                fastWeight()
            end
        end
    })

    
    TeleportTab:AddDropdown({
        Name = "Select Island",
        Default = "Tiny Island",
        Options = {"Main Island", "Tiny Island", "Frost Island", "Mythical Island", "Eternal Island", "Legends Island", "Muscleking Island"},
        Callback = function(Value)
            getgenv().selectisland = Value
            print(getgenv().selectisland)
        end
    })

    EggsTab:AddDropdown({
        Name = "Select Egg",
        Default = "Blue Crystal",
        Options = {"Blue Crystal"},
        Callback = function(Value)
            getgenv().selectcrystal = Value
            print(getgenv().selectcrystal)
        end
    })

    
    MiscTab:AddButton({
        Name = "Anti AFK",
        Callback = function()
            local VirtualInputManager = game:GetService("VirtualInputManager")
            while true do
                VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Unknown, false, game)
                task.wait(math.random(15, 120))
            end
        end
    })

    -- Initialiser la librairie Orion
    OrionLib:Init()
end
